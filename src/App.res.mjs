// Generated by ReScript, PLEASE EDIT WITH CARE

import * as React from "react";
import * as Belt_Array from "rescript/lib/es6/belt_Array.js";
import * as JsxRuntime from "react/jsx-runtime";

import './App.css'
;

function reducer(state, action) {
  switch (action.TAG) {
    case "AddTodo" :
        var todos = state.todos.concat([{
                id: state.nextId,
                content: action._0,
                completed: false
              }]);
        return {
                todos: todos,
                nextId: state.nextId + 1 | 0
              };
    case "RemoveTodo" :
        var id = action._0;
        var todos$1 = state.todos.filter(function (todo) {
              return todo.id !== id;
            });
        return {
                todos: todos$1,
                nextId: state.nextId
              };
    case "ToggleTodo" :
        var id$1 = action._0;
        var todos$2 = Belt_Array.map(state.todos, (function (todo) {
                if (todo.id === id$1) {
                  return {
                          id: todo.id,
                          content: todo.content,
                          completed: !todo.completed
                        };
                } else {
                  return todo;
                }
              }));
        return {
                todos: todos$2,
                nextId: state.nextId
              };
    
  }
}

var initialTodos = [{
    id: 1,
    content: "Task 1",
    completed: false
  }];

function App(props) {
  var match = React.useReducer(reducer, {
        todos: initialTodos,
        nextId: 2
      });
  var dispatch = match[1];
  var match$1 = React.useState(function () {
        return "";
      });
  var setNewTodo = match$1[1];
  var newTodo = match$1[0];
  var handleAddTodo = function (evt) {
    evt.preventDefault();
    if (newTodo !== "") {
      setNewTodo(evt.target.value);
      dispatch({
            TAG: "AddTodo",
            _0: newTodo
          });
      return setNewTodo(function (_prev) {
                  return "";
                });
    }
    
  };
  var todos = Belt_Array.map(match[0].todos, (function (todo) {
          return JsxRuntime.jsxs("li", {
                      children: [
                        JsxRuntime.jsx("input", {
                              checked: todo.completed,
                              type: "checkbox",
                              onChange: (function (param) {
                                  dispatch({
                                        TAG: "ToggleTodo",
                                        _0: todo.id
                                      });
                                })
                            }),
                        todo.content,
                        JsxRuntime.jsx("button", {
                              children: "remove",
                              onClick: (function (param) {
                                  dispatch({
                                        TAG: "RemoveTodo",
                                        _0: todo.id
                                      });
                                })
                            })
                      ]
                    });
        }));
  return JsxRuntime.jsxs(JsxRuntime.Fragment, {
              children: [
                JsxRuntime.jsx("h1", {
                      children: "Todo List:"
                    }),
                JsxRuntime.jsx("ul", {
                      children: todos
                    }),
                JsxRuntime.jsxs("form", {
                      children: [
                        JsxRuntime.jsx("input", {
                              type: "text",
                              value: newTodo,
                              onChange: (function ($$event) {
                                  $$event.preventDefault();
                                  var value = $$event.target.value;
                                  setNewTodo(function (_prev) {
                                        return value;
                                      });
                                })
                            }),
                        JsxRuntime.jsx("button", {
                              children: "Add Todo",
                              type: "submit"
                            })
                      ],
                      onSubmit: handleAddTodo
                    })
              ]
            });
}

var make = App;

export {
  make ,
}
/*  Not a pure module */
